{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\webFace\\\\src\\\\Components\\\\onVideo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//正在视频通话的页面\nimport React, { Component } from 'react';\nimport '../css/onVideo.css';\nimport ChatClient from '../ChatClient';\n\nvar OnVideo = /*#__PURE__*/function (_Component) {\n  _inherits(OnVideo, _Component);\n\n  var _super = _createSuper(OnVideo);\n\n  function OnVideo(props) {\n    _classCallCheck(this, OnVideo);\n\n    return _super.call(this, props); // ChatClient.localRef = React.createRef();\n    // ChatClient.remoteRef = React.createRef();\n  }\n\n  _createClass(OnVideo, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"video\", {\n        className: \"localVideo\",\n        autoPlay: \"autoPlay\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"remote\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"video\", {\n        className: \"remoteVideo\",\n        autoPlay: \"autoPlay\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"states\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"hangup\",\n        src: \"https://raw.githubusercontent.com/Foreverb/foreverb.github.io/master/img/break.png\",\n        alt: \"\",\n        onClick: function onClick() {\n          _this.hangUpVideo();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"hangUpVideo\",\n    value: function hangUpVideo() {\n      var _this$props = this.props,\n          chatModePid = _this$props.chatModePid,\n          profile = _this$props.profile;\n      var id = profile.id,\n          ava = profile.ava;\n      var content = JSON.stringify({\n        date: {\n          content: '',\n          src: ava\n        },\n        from: id,\n        to: chatModePid,\n        type: 'hangUp'\n      });\n      ChatClient.socket.send(content);\n    }\n  }]);\n\n  return OnVideo;\n}(Component);\n\nexport default OnVideo;","map":{"version":3,"sources":["D:/webFace/src/Components/onVideo.js"],"names":["React","Component","ChatClient","OnVideo","props","hangUpVideo","chatModePid","profile","id","ava","content","JSON","stringify","date","src","from","to","type","socket","send"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,UAAP,MAAuB,eAAvB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA,6BACVA,KADU,GAEhB;AACA;AACD;;;;WACD,kBAAQ;AAAA;;AACN,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAC,UAAvC;AAAkD,QAAA,GAAG,EAAC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAA+B,QAAA,QAAQ,EAAC,UAAxC;AAAmD,QAAA,GAAG,EAAC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,eAKE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,GAAG,EAAC,oFAA5B;AACA,QAAA,GAAG,EAAC,EADJ;AACO,QAAA,OAAO,EAAE,mBAAI;AAAC,UAAA,KAAI,CAACC,WAAL;AAAmB,SADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CADF;AAYD;;;WACD,uBAAa;AAAA,wBACiB,KAAKD,KADtB;AAAA,UACNE,WADM,eACNA,WADM;AAAA,UACMC,OADN,eACMA,OADN;AAAA,UAENC,EAFM,GAEID,OAFJ,CAENC,EAFM;AAAA,UAEHC,GAFG,GAEIF,OAFJ,CAEHE,GAFG;AAGX,UAAIC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,IAAI,EAAC;AAACH,UAAAA,OAAO,EAAC,EAAT;AAAYI,UAAAA,GAAG,EAACL;AAAhB,SAAN;AAA2BM,QAAAA,IAAI,EAACP,EAAhC;AAAmCQ,QAAAA,EAAE,EAACV,WAAtC;AAAkDW,QAAAA,IAAI,EAAC;AAAvD,OAAf,CAAd;AACAf,MAAAA,UAAU,CAACgB,MAAX,CAAkBC,IAAlB,CAAuBT,OAAvB;AACD;;;;EAzBmBT,S;;AA2BtB,eAAeE,OAAf","sourcesContent":["//正在视频通话的页面\r\nimport React, { Component } from 'react';\r\nimport '../css/onVideo.css';\r\nimport ChatClient from '../ChatClient';\r\n\r\nclass OnVideo extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    // ChatClient.localRef = React.createRef();\r\n    // ChatClient.remoteRef = React.createRef();\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='wrap'>\r\n        <video className='localVideo' autoPlay='autoPlay' alt=''></video>\r\n        <div className='remote'>\r\n          <video className='remoteVideo' autoPlay='autoPlay' alt=''></video>\r\n        </div>\r\n        <div className='states'>\r\n          <img className='hangup' src='https://raw.githubusercontent.com/Foreverb/foreverb.github.io/master/img/break.png'\r\n          alt='' onClick={()=>{this.hangUpVideo()}}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  hangUpVideo(){\r\n    let {chatModePid,profile} = this.props;\r\n    let {id,ava} = profile;\r\n    let content = JSON.stringify({date:{content:'',src:ava},from:id,to:chatModePid,type:'hangUp'});\r\n    ChatClient.socket.send(content);\r\n  }\r\n}\r\nexport default OnVideo;\r\n"]},"metadata":{},"sourceType":"module"}