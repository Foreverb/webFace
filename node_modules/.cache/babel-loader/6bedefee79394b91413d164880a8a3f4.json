{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\webFace\\\\src\\\\Components\\\\emjoi.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//表情栏\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\nimport { Emoji } from 'emoji-mart';\nimport React, { Component } from 'react';\nimport ChatClient from '../ChatClient';\nimport '../css/emjoi.css';\nvar customIcons = {\n  categories: {\n    recent: function recent() {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://github.githubassets.com/images/icons/emoji/octocat.png\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 19\n        }\n      });\n    },\n    foods: function foods() {\n      return /*#__PURE__*/React.createElement(\"svg\", {\n        role: \"img\",\n        viewBox: \"0 0 24 24\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M0 0l6.084 24H8L1.916 0zM21 5h-4l-1-4H4l3 12h3l1 4h13L21 5zM6.563 3h7.875l2 8H8.563l-2-8zm8.832 10l-2.856 1.904L12.063 13h3.332zM19 13l-1.5-6h1.938l2 8H16l3-2z\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 89\n        }\n      }));\n    },\n    people: function people() {\n      return /*#__PURE__*/React.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 16 16\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M3 2l10 6-10 6z\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 102\n        }\n      }));\n    }\n  }\n};\n\nvar Emjoi = /*#__PURE__*/function (_Component) {\n  _inherits(Emjoi, _Component);\n\n  var _super = _createSuper(Emjoi);\n\n  function Emjoi(props) {\n    _classCallCheck(this, Emjoi);\n\n    return _super.call(this, props);\n  } //在输入框内添加表情\n\n\n  _createClass(Emjoi, [{\n    key: \"setEmjoi\",\n    value: function setEmjoi(e) {\n      this.setState({\n        cls_icon: ['iconCard']\n      });\n      var input = document.getElementsByClassName('input')[0];\n      var str = input.innerText; //获取光标位置\n\n      var pos = ChatClient.getCursortPosition(input); //将输入框内容截成两段\n\n      var msg_1 = str.substring(0, pos);\n      var msg_2 = str.substring(pos); //获取点击的表情的name属性\n\n      var faceName = e.target.name;\n      input.innerText = [msg_1, msg_2].join(faceName);\n      ChatClient.setCaretPosition(input, pos + faceName.length);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = this.props.className;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Picker, {\n        icons: customIcons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Emjoi;\n}(Component);\n\nexport default Emjoi;","map":{"version":3,"sources":["D:/webFace/src/Components/emjoi.js"],"names":["Picker","Emoji","React","Component","ChatClient","customIcons","categories","recent","foods","people","Emjoi","props","e","setState","cls_icon","input","document","getElementsByClassName","str","innerText","pos","getCursortPosition","msg_1","substring","msg_2","faceName","target","name","join","setCaretPosition","length","className"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAO,+BAAP;AACA,SAASA,MAAT,QAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,kBAAP;AACA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE;AAAA,0BAAM;AAAK,QAAA,GAAG,EAAC,gEAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KADE;AAEVC,IAAAA,KAAK,EAAE;AAAA,0BAAM;AAAK,QAAA,IAAI,EAAC,KAAV;AAAgB,QAAA,OAAO,EAAC,WAAxB;AAAoC,QAAA,KAAK,EAAC,4BAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuE;AAAM,QAAA,CAAC,EAAC,iKAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvE,CAAN;AAAA,KAFG;AAGVC,IAAAA,MAAM,EAAE;AAAA,0BAAM;AAAK,QAAA,KAAK,EAAC,4BAAX;AAAwC,QAAA,KAAK,EAAC,IAA9C;AAAmD,QAAA,MAAM,EAAC,IAA1D;AAA+D,QAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmF;AAAM,QAAA,CAAC,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnF,CAAN;AAAA;AAHE;AADM,CAApB;;IAOMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB,G,CACD;;;;;WACA,kBAASC,CAAT,EAAY;AACV,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE,CAAC,UAAD;AAAZ,OAAd;AACA,UAAIC,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,CAAZ;AACA,UAAIC,GAAG,GAAGH,KAAK,CAACI,SAAhB,CAHU,CAIV;;AACA,UAAIC,GAAG,GAAGhB,UAAU,CAACiB,kBAAX,CAA8BN,KAA9B,CAAV,CALU,CAMV;;AACA,UAAIO,KAAK,GAAGJ,GAAG,CAACK,SAAJ,CAAc,CAAd,EAAiBH,GAAjB,CAAZ;AACA,UAAII,KAAK,GAAGN,GAAG,CAACK,SAAJ,CAAcH,GAAd,CAAZ,CARU,CASV;;AACA,UAAIK,QAAQ,GAAGb,CAAC,CAACc,MAAF,CAASC,IAAxB;AACAZ,MAAAA,KAAK,CAACI,SAAN,GAAkB,CAACG,KAAD,EAAQE,KAAR,EAAeI,IAAf,CAAoBH,QAApB,CAAlB;AACArB,MAAAA,UAAU,CAACyB,gBAAX,CAA4Bd,KAA5B,EAAmCK,GAAG,GAAGK,QAAQ,CAACK,MAAlD;AACD;;;WACD,kBAAS;AAAA,UACDC,SADC,GACa,KAAKpB,KADlB,CACDoB,SADC;AAEP,0BACE;AAAI,QAAA,SAAS,EAAEA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE1B,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAeD;;;;EApCiBF,S;;AAsCpB,eAAeO,KAAf","sourcesContent":["//表情栏\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\nimport { Emoji } from 'emoji-mart'\r\nimport React, { Component } from 'react';\r\nimport ChatClient from '../ChatClient';\r\nimport '../css/emjoi.css';\r\nconst customIcons = {\r\n  categories: {\r\n    recent: () => <img src='https://github.githubassets.com/images/icons/emoji/octocat.png' />,\r\n    foods: () => <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0l6.084 24H8L1.916 0zM21 5h-4l-1-4H4l3 12h3l1 4h13L21 5zM6.563 3h7.875l2 8H8.563l-2-8zm8.832 10l-2.856 1.904L12.063 13h3.332zM19 13l-1.5-6h1.938l2 8H16l3-2z\"/></svg>,\r\n    people: () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><path d=\"M3 2l10 6-10 6z\"></path></svg>\r\n  }\r\n}\r\nclass Emjoi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  //在输入框内添加表情\r\n  setEmjoi(e) {\r\n    this.setState({ cls_icon: ['iconCard'] })\r\n    let input = document.getElementsByClassName('input')[0];\r\n    let str = input.innerText;\r\n    //获取光标位置\r\n    let pos = ChatClient.getCursortPosition(input);\r\n    //将输入框内容截成两段\r\n    let msg_1 = str.substring(0, pos);\r\n    let msg_2 = str.substring(pos);\r\n    //获取点击的表情的name属性\r\n    let faceName = e.target.name;\r\n    input.innerText = [msg_1, msg_2].join(faceName);\r\n    ChatClient.setCaretPosition(input, pos + faceName.length);\r\n  }\r\n  render() {\r\n    let { className } = this.props;\r\n    return (\r\n      <ul className={className}>\r\n        <Picker icons={customIcons} />\r\n          {/* <span className='point'></span>\r\n          {\r\n            this.state.Code.map((item, index) => {\r\n              return <li className='emjoi_1' key={index}>\r\n                <img src={this.state.emjoi[index]} className='img_1'\r\n                  onClick={(e) => this.setEmjoi(e)} name={item} alt='' />\r\n              </li>\r\n            })\r\n\r\n          } */}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\nexport default Emjoi;\r\n"]},"metadata":{},"sourceType":"module"}