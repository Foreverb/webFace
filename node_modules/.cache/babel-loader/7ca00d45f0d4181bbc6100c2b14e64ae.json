{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\webFace\\\\src\\\\Components\\\\getVideoMsg.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//接收视频通话的消息\nimport React, { Component } from 'react';\nimport '../css/getVideo.css';\nimport ChatClient from '../ChatClient';\n\nvar GetVideoMsg = /*#__PURE__*/function (_Component) {\n  _inherits(GetVideoMsg, _Component);\n\n  var _super = _createSuper(GetVideoMsg);\n\n  function GetVideoMsg() {\n    _classCallCheck(this, GetVideoMsg);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GetVideoMsg, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          videoReqInfo = _this$props.videoReqInfo,\n          chatModePid = _this$props.chatModePid,\n          id = _this$props.id,\n          src = _this$props.src; // console.log(videoReqInfo);\n\n      var ava = videoReqInfo.ava,\n          nick = videoReqInfo.nick;\n      var socket = ChatClient.socket;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"leftWrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: ava,\n        className: \"leftAvater\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"leftMsg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, \"\\u662F\\u5426\\u63A5\\u6536\\u6765\\u81EA\\u4E8E\", nick, \"\\u7684\\u89C6\\u9891\\u901A\\u8BDD\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"change\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"disagree\",\n        onClick: function onClick() {\n          _this2.refuse(socket, id, chatModePid, src);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, \"\\u274C\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"agree\",\n        onClick: function onClick() {\n          _this2.startRtc(socket, id, chatModePid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, \"\\u2714\\uFE0F\"))));\n    } //拒绝视频通话\n\n  }, {\n    key: \"refuse\",\n    value: function refuse(socket, id, chatModePid, src) {\n      var data = JSON.stringify({\n        date: {\n          content: '对方拒绝视频通话',\n          src: src\n        },\n        from: id,\n        to: chatModePid,\n        type: 'refuseVideo'\n      });\n      socket.send(data);\n      var data2 = JSON.stringify({\n        date: {\n          content: '您拒绝视频通话',\n          src: src\n        },\n        from: chatModePid,\n        to: id,\n        type: 'refuseHim'\n      });\n      socket.send(data2);\n    } //交换sdp信息\n\n  }, {\n    key: \"sendSdpMsgFun\",\n    value: function sendSdpMsgFun(sdp) {\n      var _this$props2 = this.props,\n          chatModePid = _this$props2.chatModePid,\n          id = _this$props2.id;\n      console.log('接收方：设置自身  description ');\n      ChatClient.pc.setLocalDescription(sdp);\n      var data = ChatClient.msgModel(sdp, id, chatModePid, 'changeSdpMsg');\n      ChatClient.socket.send(data);\n    }\n  }, {\n    key: \"startRtc\",\n    value: function startRtc(socket, id, chatModePid) {\n      var _this = this;\n\n      console.log('视频聊天对象' + chatModePid);\n      var content = JSON.stringify({\n        content: '同意视频通话',\n        from: id,\n        to: chatModePid,\n        type: 'agreeVideo'\n      });\n      socket.send(content);\n      var agreeVideo = this.props.agreeVideo;\n      agreeVideo && agreeVideo();\n      ChatClient.start(function () {\n        console.log('接收方添加视频流', ChatClient.localStream);\n        ChatClient.pc.addStream(ChatClient.localStream);\n        console.log('接收方：创建 answer');\n        ChatClient.pc.createAnswer(function (sdp) {\n          return _this.sendSdpMsgFun(sdp);\n        }, ChatClient.handleError);\n      });\n    }\n  }]);\n\n  return GetVideoMsg;\n}(Component);\n\nexport default GetVideoMsg; //问题：接收方没有收到发起方的iceCandidate信息","map":{"version":3,"sources":["D:/webFace/src/Components/getVideoMsg.js"],"names":["React","Component","ChatClient","GetVideoMsg","props","videoReqInfo","chatModePid","id","src","ava","nick","socket","refuse","startRtc","data","JSON","stringify","date","content","from","to","type","send","data2","sdp","console","log","pc","setLocalDescription","msgModel","_this","agreeVideo","start","localStream","addStream","createAnswer","sendSdpMsgFun","handleError"],"mappings":"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","sourcesContent":["//接收视频通话的消息\r\nimport React, { Component } from 'react';\r\nimport '../css/getVideo.css';\r\nimport ChatClient from '../ChatClient';\r\n\r\nclass GetVideoMsg extends Component{\r\n  render(){\r\n    let {videoReqInfo,chatModePid,id,src} = this.props;\r\n    // console.log(videoReqInfo);\r\n    let {ava,nick} = videoReqInfo;\r\n    let socket = ChatClient.socket;\r\n    return(\r\n      <div className='leftWrap'>\r\n        <img src={ava} className='leftAvater' alt=''/>\r\n        <div className='leftMsg'>\r\n          <p className='title'>是否接收来自于{nick}的视频通话</p>\r\n          <div className='change'>\r\n            <span className='disagree' onClick={()=>{this.refuse(socket,id,chatModePid,src)}}>❌</span>\r\n            <span className='agree' onClick={()=>{this.startRtc(socket,id,chatModePid)}}>✔️</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  //拒绝视频通话\r\n  refuse(socket,id,chatModePid,src){\r\n    let data = JSON.stringify({date:{content:'对方拒绝视频通话',src:src},from:id,to:chatModePid,type:'refuseVideo'});\r\n    socket.send(data);\r\n    let data2 = JSON.stringify({date:{content:'您拒绝视频通话',src:src},from:chatModePid,to:id,type:'refuseHim'});\r\n    socket.send(data2);\r\n  }\r\n  //交换sdp信息\r\n  sendSdpMsgFun(sdp){\r\n    let {chatModePid,id} = this.props;\r\n\r\n    console.log('接收方：设置自身  description ')\r\n    ChatClient.pc.setLocalDescription(sdp);\r\n\r\n    let data = ChatClient.msgModel(sdp,id,chatModePid,'changeSdpMsg')\r\n    ChatClient.socket.send(data);\r\n  }\r\n\r\n  startRtc(socket,id,chatModePid){\r\n\r\n    let _this = this;\r\n    console.log('视频聊天对象'+chatModePid);\r\n    let content = JSON.stringify({content:'同意视频通话',from:id,to:chatModePid,type:'agreeVideo'});\r\n    socket.send(content);\r\n    let {agreeVideo} = this.props;\r\n    agreeVideo && agreeVideo();\r\n\r\n    ChatClient.start(function(){\r\n        console.log('接收方添加视频流',ChatClient.localStream);\r\n        ChatClient.pc.addStream(ChatClient.localStream);\r\n\r\n        console.log('接收方：创建 answer')\r\n        ChatClient.pc.createAnswer((sdp)=>_this.sendSdpMsgFun(sdp),ChatClient.handleError);\r\n    })\r\n  }\r\n}\r\nexport default GetVideoMsg\r\n\r\n\r\n//问题：接收方没有收到发起方的iceCandidate信息\r\n"]},"metadata":{},"sourceType":"module"}