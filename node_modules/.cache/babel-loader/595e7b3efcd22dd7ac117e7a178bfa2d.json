{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\webFace\\\\src\\\\Components\\\\emjoi.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//表情栏\nimport EmojiReact from 'react-emoji-react';\nimport React, { Component } from 'react';\nimport ChatClient from '../ChatClient';\nimport '../css/emjoi.css';\nvar emojis = [{\n  name: 'rage',\n  count: 2\n}, {\n  name: 'blush',\n  count: 1\n}, {\n  name: 100,\n  count: 3\n}, {\n  name: 'grinning',\n  count: 2\n}];\n\nvar Emjoi = /*#__PURE__*/function (_Component) {\n  _inherits(Emjoi, _Component);\n\n  var _super = _createSuper(Emjoi);\n\n  function Emjoi(props) {\n    var _this;\n\n    _classCallCheck(this, Emjoi);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      emojis: emojis\n    };\n    return _this;\n  } //在输入框内添加表情\n\n\n  _createClass(Emjoi, [{\n    key: \"setEmjoi\",\n    value: function setEmjoi(e) {\n      this.setState({\n        cls_icon: ['iconCard']\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(EmojiReact, {\n        reactions: this.state.emojis,\n        onReaction: function onReaction(name) {\n          return _this2.onReaction(name);\n        },\n        onEmojiClick: function onEmojiClick(name) {\n          return _this2.onEmojiClick(name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"onReaction\",\n    value: function onReaction(name) {\n      console.log(this.props.closeEmjoi);\n      var emojis = this.state.emojis.map(function (emoji) {\n        return emoji;\n      });\n      this.setState({\n        emojis: emojis\n      }); //输入框内填入表情\n\n      var input = document.getElementsByClassName('input')[0];\n      var str = input.innerText; //获取光标位置\n\n      var pos = ChatClient.getCursortPosition(input); //将输入框内容截成两段\n\n      var msg_1 = str.substring(0, pos);\n      var msg_2 = str.substring(pos); //获取点击的表情的name属性\n\n      var faceName = name;\n      input.innerText = [msg_1, msg_2].join('') + faceName;\n      ChatClient.setCaretPosition(input, pos + faceName.length);\n      this.props.closeEmjoi(false);\n    }\n  }, {\n    key: \"onEmojiClick\",\n    value: function onEmojiClick(name) {\n      var emojis = this.state.emojis.concat([{\n        name: name,\n        count: 1\n      }]);\n      this.setState({\n        emojis: emojis\n      });\n    }\n  }]);\n\n  return Emjoi;\n}(Component);\n\nexport default Emjoi;","map":{"version":3,"sources":["D:/webFace/src/Components/emjoi.js"],"names":["EmojiReact","React","Component","ChatClient","emojis","name","count","Emjoi","props","state","e","setState","cls_icon","onReaction","onEmojiClick","console","log","closeEmjoi","map","emoji","input","document","getElementsByClassName","str","innerText","pos","getCursortPosition","msg_1","substring","msg_2","faceName","join","setCaretPosition","length","concat"],"mappings":"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","sourcesContent":["//表情栏\r\nimport EmojiReact from 'react-emoji-react';\r\nimport React, { Component } from 'react';\r\nimport ChatClient from '../ChatClient';\r\nimport '../css/emjoi.css';\r\nconst emojis = [\r\n  {\r\n    name: 'rage',\r\n    count: 2\r\n  },\r\n  {\r\n    name: 'blush',\r\n    count: 1\r\n  },\r\n  {\r\n    name: 100,\r\n    count: 3\r\n  },\r\n  {\r\n    name: 'grinning',\r\n    count: 2\r\n  }\r\n];\r\nclass Emjoi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emojis\r\n    };\r\n  }\r\n  //在输入框内添加表情\r\n  setEmjoi(e) {\r\n    this.setState({ cls_icon: ['iconCard'] })\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <EmojiReact\r\n        reactions={this.state.emojis}\r\n        onReaction={(name) => this.onReaction(name)}\r\n        onEmojiClick={(name) => this.onEmojiClick(name)}\r\n      />\r\n    )\r\n  }\r\n  onReaction(name) {\r\n    console.log(this.props.closeEmjoi);\r\n    const emojis = this.state.emojis.map(emoji => {\r\n      return emoji;\r\n    });\r\n    this.setState({ emojis });\r\n    //输入框内填入表情\r\n    let input = document.getElementsByClassName('input')[0];\r\n    let str = input.innerText;\r\n    //获取光标位置\r\n    let pos = ChatClient.getCursortPosition(input);\r\n    //将输入框内容截成两段\r\n    let msg_1 = str.substring(0, pos);\r\n    let msg_2 = str.substring(pos);\r\n    //获取点击的表情的name属性\r\n    let faceName = name;\r\n    input.innerText = [msg_1, msg_2].join('') + faceName;\r\n    ChatClient.setCaretPosition(input, pos + faceName.length);\r\n    this.props.closeEmjoi(false)\r\n  }\r\n  onEmojiClick(name) {\r\n    const emojis = this.state.emojis.concat([{ name, count: 1 }]);\r\n    this.setState({ emojis });\r\n\r\n  }\r\n}\r\nexport default Emjoi;\r\n"]},"metadata":{},"sourceType":"module"}