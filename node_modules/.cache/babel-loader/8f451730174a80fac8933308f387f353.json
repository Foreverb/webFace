{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _getEmoji = require('get-emoji');\n\nvar _getEmoji2 = _interopRequireDefault(_getEmoji);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar wrapperStyle = {\n  display: 'inline-block',\n  marginTop: '2px',\n  marginBottom: '2px',\n  marginRight: '4px',\n  padding: '1px 3px',\n  borderRadius: '5px',\n  backgroundColor: '#fff',\n  border: '1px solid #E8E8E8',\n  cursor: 'pointer',\n  height: '1.4rem',\n  lineHeight: '23px',\n  WebkitUserSelect: 'none',\n  msUserSelect: 'none',\n  MozUserSelect: 'none'\n};\nvar emojiStyle = {\n  lineHeight: '20px',\n  verticalAlign: 'middle',\n  display: 'inline-block'\n};\nvar wrapperHover = {\n  border: '1px solid #4fb0fc'\n};\nvar countStyle = {\n  fontSize: '11px',\n  fontFamily: 'helvetica, arial',\n  position: 'relative',\n  top: '-2px',\n  padding: '0 1px 3px',\n  color: '#959595'\n};\nvar countHover = {\n  color: \"#4fb0fc\"\n};\nvar selectorStyle = {\n  boxShadow: '0 6px 8px 0 rgba(0, 0, 0, 0.24)',\n  backgroundColor: '#fff',\n  width: '250px',\n  height: '220px',\n  position: 'relative',\n  left: '10px',\n  top: '0px'\n};\n\nvar EmojiImage = function EmojiImage(_ref) {\n  var name = _ref.name;\n  return _react2.default.createElement('img', {\n    style: {\n      width: '16px',\n      height: '16px'\n    },\n    src: (0, _getEmoji2.default)(name)\n  });\n};\n\nvar SingleEmoji = function (_Component) {\n  _inherits(SingleEmoji, _Component);\n\n  function SingleEmoji() {\n    _classCallCheck(this, SingleEmoji);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SingleEmoji).call(this));\n\n    _this.state = {\n      hovered: false\n    };\n    return _this;\n  }\n\n  _createClass(SingleEmoji, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props;\n      var name = _props.name;\n      var _props$count = _props.count;\n      var count = _props$count === undefined ? 1 : _props$count;\n      var _props$styles = _props.styles;\n      var styles = _props$styles === undefined ? {\n        wrapperStyle: wrapperStyle,\n        emojiStyle: emojiStyle,\n        countStyle: countStyle,\n        wrapperHover: wrapperHover,\n        countHover: countHover\n      } : _props$styles;\n      var _props$onClick = _props.onClick;\n\n      var _onClick = _props$onClick === undefined ? function () {} : _props$onClick;\n\n      var wrapperFinalStyle = this.state.hovered ? _extends({}, wrapperStyle, wrapperHover) : wrapperStyle;\n      var countFinalStyle = this.state.hovered ? _extends({}, countStyle, countHover) : countStyle;\n      return _react2.default.createElement('div', {\n        style: wrapperFinalStyle,\n        onClick: function onClick() {\n          return _onClick(name);\n        },\n        onMouseEnter: function onMouseEnter() {\n          return _this2.setState({\n            hovered: true\n          });\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this2.setState({\n            hovered: false\n          });\n        }\n      }, _react2.default.createElement('span', {\n        style: emojiStyle\n      }, _react2.default.createElement(EmojiImage, {\n        name: name\n      })), _react2.default.createElement('span', {\n        style: countFinalStyle\n      }, count));\n    }\n  }]);\n\n  return SingleEmoji;\n}(_react.Component);\n\nvar PickerEmoji = function PickerEmoji(_ref2) {\n  var _onClick2 = _ref2.onClick;\n  var image = _ref2.image;\n  return _react2.default.createElement('span', {\n    style: {\n      cursor: 'pointer',\n      padding: '5px'\n    },\n    onClick: function onClick() {\n      return _onClick2();\n    }\n  }, image);\n};\n\nvar EmojiWrapper = function EmojiWrapper(_ref3) {\n  var reactions = _ref3.reactions;\n  var onReaction = _ref3.onReaction;\n  return _react2.default.createElement('div', {\n    style: {\n      display: 'inline-block'\n    }\n  }, reactions.map(function (_ref4) {\n    var name = _ref4.name;\n    var count = _ref4.count;\n    return _react2.default.createElement(SingleEmoji, {\n      name: name,\n      count: count,\n      key: name,\n      onClick: onReaction\n    });\n  }));\n};\n\nvar SINGLE_EMOJI_HEIGHT = 23;\nvar LOAD_HEIGHT = 500;\nvar EMOJIS_ACROSS = 8;\n\nvar EmojiSelector = function (_Component2) {\n  _inherits(EmojiSelector, _Component2);\n\n  function EmojiSelector() {\n    _classCallCheck(this, EmojiSelector);\n\n    var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(EmojiSelector).call(this));\n\n    _this3.state = {\n      filter: \"\",\n      xHovered: false,\n      scrollPosition: 0\n    };\n    _this3.onScroll = _this3.onScroll.bind(_this3);\n    return _this3;\n  }\n\n  _createClass(EmojiSelector, [{\n    key: 'onScroll',\n    value: function onScroll() {\n      this.setState({\n        scrollPosition: this.emojiContainer.scrollTop\n      });\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.emojiContainer.addEventListener('scroll', this.onScroll);\n    }\n  }, {\n    key: 'componentWillUnMount',\n    value: function componentWillUnMount() {\n      this.emojiContainer.removeEventListener('scroll', this.onScroll);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props;\n      var showing = _props2.showing;\n      var onEmojiClick = _props2.onEmojiClick;\n      var close = _props2.close;\n      var xStyle = {\n        color: '#E8E8E8',\n        fontSize: '20px',\n        cursor: 'pointer',\n        float: 'right',\n        marginTop: '-32px',\n        marginRight: '5px'\n      };\n\n      if (this.state.xHovered) {\n        xStyle.color = '#4fb0fc';\n      }\n\n      var searchInput = _react2.default.createElement('div', null, _react2.default.createElement('input', {\n        style: {\n          margin: '10px',\n          width: '85%',\n          borderRadius: '5px',\n          border: '1px solid #E8E8E8'\n        },\n        type: 'text',\n        placeholder: 'Search',\n        value: this.state.filter,\n        onChange: function onChange(e) {\n          return _this4.setState({\n            filter: e.target.value\n          });\n        }\n      }));\n\n      var x = _react2.default.createElement('span', {\n        style: xStyle,\n        onClick: function onClick() {\n          _this4.setState({\n            xHovered: false\n          });\n\n          close();\n        },\n        onMouseEnter: function onMouseEnter() {\n          return _this4.setState({\n            xHovered: true\n          });\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this4.setState({\n            xHovered: false\n          });\n        }\n      }, 'x');\n\n      var show = _getEmoji.emojiList.filter(function (name) {\n        return name.indexOf(_this4.state.filter) !== -1;\n      });\n\n      var emptyStyle = {\n        height: '16px',\n        width: '16px',\n        display: 'inline-block'\n      };\n      var emojis = show.map(function (em, i) {\n        var row = Math.floor((i + 1) / EMOJIS_ACROSS);\n        var pixelPosition = row * SINGLE_EMOJI_HEIGHT;\n        var position = _this4.state.scrollPosition + LOAD_HEIGHT;\n        var shouldShowImage = pixelPosition < position && position - pixelPosition <= LOAD_HEIGHT;\n        var image = shouldShowImage ? _react2.default.createElement(EmojiImage, {\n          name: em\n        }) : _react2.default.createElement('div', {\n          style: emptyStyle\n        });\n        return _react2.default.createElement(PickerEmoji, {\n          key: em,\n          image: image,\n          onClick: function onClick() {\n            onEmojiClick(em);\n            close();\n          }\n        });\n      });\n      return _react2.default.createElement('div', {\n        style: showing ? selectorStyle : {\n          display: 'none'\n        }\n      }, searchInput, x, _react2.default.createElement('div', {\n        style: {\n          padding: '10px',\n          paddingTop: '5px',\n          width: '230px',\n          height: '160px',\n          overflow: 'auto'\n        },\n        ref: function ref(node) {\n          return _this4.emojiContainer = node;\n        }\n      }, emojis));\n    }\n  }]);\n\n  return EmojiSelector;\n}(_react.Component);\n\nvar EmojiReact = function (_Component3) {\n  _inherits(EmojiReact, _Component3);\n\n  function EmojiReact() {\n    _classCallCheck(this, EmojiReact);\n\n    var _this5 = _possibleConstructorReturn(this, Object.getPrototypeOf(EmojiReact).call(this));\n\n    _this5.state = {\n      hovered: false,\n      showSelector: false\n    };\n    _this5.onKeyPress = _this5.onKeyPress.bind(_this5);\n    _this5.closeSelector = _this5.closeSelector.bind(_this5);\n    _this5.onClick = _this5.onClick.bind(_this5);\n    return _this5;\n  }\n\n  _createClass(EmojiReact, [{\n    key: 'onKeyPress',\n    value: function onKeyPress(e) {\n      if (e.keyCode === 27) {\n        this.closeSelector();\n      }\n    }\n  }, {\n    key: 'onClick',\n    value: function onClick(_ref5) {\n      var target = _ref5.target;\n\n      if (!this.node.contains(target) && this.state.showSelector) {\n        this.closeSelector();\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      document.addEventListener('click', this.onClick);\n      document.addEventListener('keydown', this.onKeyPress);\n    }\n  }, {\n    key: 'componentWillUnMount',\n    value: function componentWillUnMount() {\n      document.removeEventListener('click', this.onClick);\n      document.removeEventListener('keydown', this.onKeyPress);\n    }\n  }, {\n    key: 'closeSelector',\n    value: function closeSelector() {\n      this.setState({\n        showSelector: false\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this6 = this;\n\n      var _props3 = this.props;\n      var reactions = _props3.reactions;\n      var onReaction = _props3.onReaction;\n      var onEmojiClick = _props3.onEmojiClick;\n      var plusButtonStyle = this.state.hovered ? _extends({}, wrapperStyle, wrapperHover) : wrapperStyle;\n      var plusStyle = this.state.hovered ? _extends({}, countStyle, countHover) : countStyle;\n\n      var selector = _react2.default.createElement('div', {\n        style: {\n          display: 'inline-block'\n        },\n        ref: function ref(node) {\n          return _this6.node = node;\n        }\n      }, _react2.default.createElement('div', {\n        style: plusButtonStyle,\n        onMouseEnter: function onMouseEnter() {\n          return _this6.setState({\n            hovered: true\n          });\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this6.setState({\n            hovered: false\n          });\n        },\n        onClick: function onClick() {\n          return _this6.setState({\n            showSelector: !_this6.state.showSelector\n          });\n        }\n      }, _react2.default.createElement('span', {\n        style: plusStyle\n      }, '+')), _react2.default.createElement(EmojiSelector, {\n        showing: this.state.showSelector,\n        onEmojiClick: onEmojiClick,\n        close: this.closeSelector\n      }));\n\n      return _react2.default.createElement('div', {\n        style: {\n          display: 'inline-flex'\n        }\n      }, _react2.default.createElement(EmojiWrapper, {\n        onReaction: onReaction,\n        reactions: reactions\n      }), selector);\n    }\n  }]);\n\n  return EmojiReact;\n}(_react.Component);\n\nexports.default = EmojiReact;","map":null,"metadata":{},"sourceType":"script"}