{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\webFace\\\\src\\\\Components\\\\emjoi.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//表情栏\nimport React, { Component } from 'react';\nimport ChatClient from '../ChatClient';\nimport '../css/emjoi.css';\n\nvar Emjoi = /*#__PURE__*/function (_Component) {\n  _inherits(Emjoi, _Component);\n\n  var _super = _createSuper(Emjoi);\n\n  function Emjoi(props) {\n    var _this;\n\n    _classCallCheck(this, Emjoi);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      emjoi: ['../emoji/1.png', '../emoji/2.png', '../emoji/3.png', '../emoji/4.png', '../emoji/5.png', '../emoji/6.png', '../emoji/7.png', '../emoji/8.png', '../emoji/9.png', '../emoji/10.png', '../emoji/11.png', '../emoji/12.png', '../emoji/13.png', '../emoji/14.png', '../emoji/15.png', '../emoji/16.png', '../emoji/17.png', '../emoji/18.png', '../emoji/19.png', '../emoji/20.png', '../emoji/21.png', '../emoji/22.png', '../emoji/23.png', '../emoji/24.png', '../emoji/25.png', '../emoji/26.png', '../emoji/27.png', '../emoji/28.png', '../emoji/29.png', '../emoji/30.png', '../emoji/31.png', '../emoji/32.png', '../emoji/33.png', '../emoji/34.png', '../emoji/35.png', '../emoji/36.png', '../emoji/37.png', '../emoji/38.png', '../emoji/39.png', '../emoji/40.png']\n    };\n    return _this;\n  }\n\n  _createClass(Emjoi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} //在输入框内添加表情\n\n  }, {\n    key: \"setEmjoi\",\n    value: function setEmjoi(e) {\n      this.setState({\n        cls_icon: ['iconCard']\n      });\n      var input = document.getElementsByClassName('input')[0];\n      var str = input.innerText; //获取光标位置\n\n      var pos = ChatClient.getCursortPosition(input); //将输入框内容截成两段\n\n      var msg_1 = str.substring(0, pos);\n      var msg_2 = str.substring(pos); //获取点击的表情的name属性\n\n      var faceName = e.target.name;\n      input.innerText = [msg_1, msg_2].join(faceName);\n      ChatClient.setCaretPosition(input, pos + faceName.length);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var className = this.props.className;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"point\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }), emjoi.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"emjoi_1\",\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: item,\n          className: \"img_1\",\n          onClick: function onClick(e) {\n            return _this2.setEmjoi(e);\n          },\n          name: \"[\\u6587\\u4EF6]\",\n          alt: \"\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return Emjoi;\n}(Component);\n\nexport default Emjoi;","map":{"version":3,"sources":["D:/webFace/src/Components/emjoi.js"],"names":["React","Component","ChatClient","Emjoi","props","state","emjoi","e","setState","cls_icon","input","document","getElementsByClassName","str","innerText","pos","getCursortPosition","msg_1","substring","msg_2","faceName","target","name","join","setCaretPosition","length","className","map","item","index","setEmjoi"],"mappings":"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","sourcesContent":["//表情栏\r\nimport React, { Component } from 'react';\r\nimport ChatClient from '../ChatClient';\r\nimport '../css/emjoi.css';\r\nclass Emjoi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emjoi: [\r\n        '../emoji/1.png','../emoji/2.png','../emoji/3.png',\r\n        '../emoji/4.png','../emoji/5.png','../emoji/6.png',\r\n        '../emoji/7.png','../emoji/8.png','../emoji/9.png',\r\n        '../emoji/10.png','../emoji/11.png','../emoji/12.png',\r\n        '../emoji/13.png','../emoji/14.png','../emoji/15.png',\r\n        '../emoji/16.png','../emoji/17.png','../emoji/18.png',\r\n        '../emoji/19.png','../emoji/20.png','../emoji/21.png',\r\n        '../emoji/22.png','../emoji/23.png','../emoji/24.png',\r\n        '../emoji/25.png','../emoji/26.png','../emoji/27.png',\r\n        '../emoji/28.png','../emoji/29.png','../emoji/30.png',\r\n        '../emoji/31.png','../emoji/32.png','../emoji/33.png',\r\n        '../emoji/34.png','../emoji/35.png','../emoji/36.png',\r\n        '../emoji/37.png','../emoji/38.png','../emoji/39.png',\r\n        '../emoji/40.png'\r\n      ]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n  }\r\n  //在输入框内添加表情\r\n  setEmjoi(e) {\r\n    this.setState({ cls_icon: ['iconCard'] })\r\n    let input = document.getElementsByClassName('input')[0];\r\n    let str = input.innerText;\r\n    //获取光标位置\r\n    let pos = ChatClient.getCursortPosition(input);\r\n    //将输入框内容截成两段\r\n    let msg_1 = str.substring(0, pos);\r\n    let msg_2 = str.substring(pos);\r\n    //获取点击的表情的name属性\r\n    let faceName = e.target.name;\r\n    input.innerText = [msg_1, msg_2].join(faceName);\r\n    ChatClient.setCaretPosition(input, pos + faceName.length);\r\n  }\r\n  render() {\r\n    let { className } = this.props;\r\n    return (\r\n      <ul className={className}>\r\n          <span className='point'></span>\r\n          {\r\n            emjoi.map((item, index) => {\r\n              return <li className='emjoi_1' key={index}>\r\n                <img src={item} className='img_1'\r\n                  onClick={(e) => this.setEmjoi(e)} name='[文件]' alt='' />\r\n              </li>\r\n            })\r\n\r\n          }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\nexport default Emjoi;\r\n"]},"metadata":{},"sourceType":"module"}