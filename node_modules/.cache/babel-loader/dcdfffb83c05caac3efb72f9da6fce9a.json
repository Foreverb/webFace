{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\webFace\\\\src\\\\Components\\\\publicWrap.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//公共频道\nimport React, { Component } from 'react';\nimport '../css/public.css';\nimport { Switch } from 'antd';\nimport 'antd/dist/antd.css';\n\nvar PublicCard = /*#__PURE__*/function (_Component) {\n  _inherits(PublicCard, _Component);\n\n  var _super = _createSuper(PublicCard);\n\n  function PublicCard(props) {\n    _classCallCheck(this, PublicCard);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(PublicCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          src = _this$props.src,\n          chatModePid = _this$props.chatModePid;\n      var cls = ['publicCard', chatModePid === -1 ? 'checked' : null].join(' ');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: src,\n        className: \"publicAvater\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"descript second\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, \"\\u516C\\u5171\\u9891\\u9053\"));\n    }\n  }]);\n\n  return PublicCard;\n}(Component);\n\nvar PublicWrap = /*#__PURE__*/function (_Component2) {\n  _inherits(PublicWrap, _Component2);\n\n  var _super2 = _createSuper(PublicWrap);\n\n  function PublicWrap(props) {\n    _classCallCheck(this, PublicWrap);\n\n    return _super2.call(this, props);\n  }\n\n  _createClass(PublicWrap, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props2 = this.props,\n          tip = _this$props2.tip,\n          chatModePid = _this$props2.chatModePid,\n          isOpenPublic = _this$props2.isOpenPublic;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"switch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        checkedChildren: \"\\u5F00\",\n        unCheckedChildren: \"\\u5173\",\n        checked: isOpenPublic,\n        onClick: function onClick() {\n          chatModePid === -1 && _this._changeStatus();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"descript\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, tip)), /*#__PURE__*/React.createElement(PublicCard, {\n        src: \"https://raw.githubusercontent.com/Foreverb/foreverb.github.io/master/img/public.png\",\n        chatModePid: chatModePid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"_changeStatus\",\n    value: function _changeStatus() {\n      var onchange = this.props.onchange;\n      onchange && onchange();\n    }\n  }]);\n\n  return PublicWrap;\n}(Component);\n\nexport default PublicWrap;","map":{"version":3,"sources":["D:/webFace/src/Components/publicWrap.js"],"names":["React","Component","Switch","PublicCard","props","src","chatModePid","cls","join","PublicWrap","tip","isOpenPublic","_changeStatus","onchange"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAO,oBAAP;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA,6BACVA,KADU;AAEjB;;;;WACD,kBAAQ;AAAA,wBACkB,KAAKA,KADvB;AAAA,UACDC,GADC,eACDA,GADC;AAAA,UACGC,WADH,eACGA,WADH;AAEN,UAAIC,GAAG,GAAE,CAAC,YAAD,EAAcD,WAAW,KAAG,CAAC,CAAf,GAAiB,SAAjB,GAA2B,IAAzC,EAA+CE,IAA/C,CAAoD,GAApD,CAAT;AACA,0BACE;AAAK,QAAA,SAAS,EAAED,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAEF,GAAV;AAAe,QAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,CADF;AAMD;;;;EAbsBJ,S;;IAgBnBQ,U;;;;;AACJ,sBAAYL,KAAZ,EAAkB;AAAA;;AAAA,8BACVA,KADU;AAEjB;;;;WACD,kBAAQ;AAAA;;AAAA,yBAC+B,KAAKA,KADpC;AAAA,UACDM,GADC,gBACDA,GADC;AAAA,UACGJ,WADH,gBACGA,WADH;AAAA,UACeK,YADf,gBACeA,YADf;AAEN,0BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,eAAe,EAAC,QAAxB;AAA4B,QAAA,iBAAiB,EAAC,QAA9C;AACC,QAAA,OAAO,EAAEA,YADV;AACwB,QAAA,OAAO,EAAE,mBAAI;AAACL,UAAAA,WAAW,KAAG,CAAC,CAAf,IAAoB,KAAI,CAACM,aAAL,EAApB;AAAyC,SAD/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAGE;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBF,GAAzB,CAHF,CADF,eAME,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAC,qFAAhB;AAAsG,QAAA,WAAW,EAAEJ,WAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;;WACD,yBAAe;AAAA,UACRO,QADQ,GACI,KAAKT,KADT,CACRS,QADQ;AAEbA,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD;;;;EApBsBZ,S;;AAsBzB,eAAeQ,UAAf","sourcesContent":["//公共频道\r\nimport React, { Component } from 'react';\r\nimport '../css/public.css';\r\nimport { Switch } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nclass PublicCard extends Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  render(){\r\n    let {src,chatModePid} = this.props;\r\n    let cls =['publicCard',chatModePid===-1?'checked':null].join(' ');\r\n    return(\r\n      <div className={cls}>\r\n        <img src={src} className='publicAvater'/>\r\n        <p className='descript second'>公共频道</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass PublicWrap extends Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  render(){\r\n    let {tip,chatModePid,isOpenPublic} = this.props;\r\n    return(\r\n      <div className='normal'>\r\n        <div className='switch'>\r\n          <Switch checkedChildren=\"开\" unCheckedChildren=\"关\"\r\n           checked={isOpenPublic} onClick={()=>{chatModePid===-1 && this._changeStatus()}}/>\r\n          <p className='descript'>{tip}</p>\r\n        </div>\r\n        <PublicCard src='https://raw.githubusercontent.com/Foreverb/foreverb.github.io/master/img/public.png' chatModePid={chatModePid}/>\r\n      </div>\r\n    )\r\n  }\r\n  _changeStatus(){\r\n    let {onchange} = this.props;\r\n    onchange && onchange();\r\n  }\r\n}\r\nexport default PublicWrap;\r\n"]},"metadata":{},"sourceType":"module"}