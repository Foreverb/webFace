{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\webFace\\\\src\\\\Components\\\\emjoi.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//表情栏\nimport React, { Component } from 'react';\nimport ChatClient from '../ChatClient';\nimport '../css/emjoi.css';\nimport EmojiReact from 'react-emoji-react';\nvar emojis = [{\n  name: 'rage'\n}, {\n  name: 'blush'\n}, {\n  name: 100\n}, {\n  name: 'grinning'\n}];\n\nvar Emjoi = /*#__PURE__*/function (_Component) {\n  _inherits(Emjoi, _Component);\n\n  var _super = _createSuper(Emjoi);\n\n  function Emjoi(props) {\n    var _this;\n\n    _classCallCheck(this, Emjoi);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      emojis: emojis,\n      emjoi: ['../emoji/1.png', '../emoji/2.png', '../emoji/3.png', '../emoji/4.png', '../emoji/5.png', '../emoji/6.png', '../emoji/7.png', '../emoji/8.png', '../emoji/9.png', '../emoji/10.png', '../emoji/11.png', '../emoji/12.png', '../emoji/13.png', '../emoji/14.png', '../emoji/15.png', '../emoji/16.png', '../emoji/17.png', '../emoji/18.png', '../emoji/19.png', '../emoji/20.png', '../emoji/21.png', '../emoji/22.png', '../emoji/23.png', '../emoji/24.png', '../emoji/25.png', '../emoji/26.png', '../emoji/27.png', '../emoji/28.png', '../emoji/29.png', '../emoji/30.png', '../emoji/31.png', '../emoji/32.png', '../emoji/33.png', '../emoji/34.png', '../emoji/35.png', '../emoji/36.png', '../emoji/37.png', '../emoji/38.png', '../emoji/39.png', '../emoji/40.png'],\n      Code: ['[e:~]', '[e:!]', '[e:@]', '[e:#]', '[e:$]', '[e:%]', '[e:^]', '[e:&]', '[e:*]', '[e:(]', '[e:)]', '[e:Q]', '[e:W]', '[e:E]', '[e:R]', '[e:T]', '[e:Y]', '[e:U]', '[e:I]', '[e:O]', '[e:P]', '[e:A]', '[e:S]', '[e:D]', '[e:F]', '[e:G]', '[e:H]', '[e:J]', '[e:K]', '[e:L]', '[e:Z]', '[e:X]', '[e:C]', '[e:V]', '[e:B]', '[e:N]', '[e:M]', '[e:<]', '[e:>]', '[e:?]']\n    };\n    return _this;\n  }\n\n  _createClass(Emjoi, [{\n    key: \"onEmojiClick\",\n    value: function onEmojiClick(name) {\n      var emojis = this.state.emojis.concat([{\n        name: name\n      }]);\n      this.setState({\n        emojis: emojis\n      });\n    } //在输入框内添加表情\n\n  }, {\n    key: \"setEmjoi\",\n    value: function setEmjoi(e) {\n      this.setState({\n        cls_icon: ['iconCard']\n      });\n      var input = document.getElementsByClassName('input')[0];\n      var str = input.innerText; //获取光标位置\n\n      var pos = ChatClient.getCursortPosition(input); //将输入框内容截成两段\n\n      var msg_1 = str.substring(0, pos);\n      var msg_2 = str.substring(pos); //获取点击的表情的name属性\n\n      var faceName = e.target.name;\n      input.innerText = [msg_1, msg_2].join(faceName);\n      ChatClient.setCaretPosition(input, pos + faceName.length);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var className = this.props.className;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(EmojiReact, {\n        reactions: this.state.emojis,\n        onEmojiClick: function onEmojiClick(name) {\n          return _this2.onEmojiClick(name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Emjoi;\n}(Component);\n\nexport default Emjoi;","map":{"version":3,"sources":["D:/webFace/src/Components/emjoi.js"],"names":["React","Component","ChatClient","EmojiReact","emojis","name","Emjoi","props","state","emjoi","Code","concat","setState","e","cls_icon","input","document","getElementsByClassName","str","innerText","pos","getCursortPosition","msg_1","substring","msg_2","faceName","target","join","setCaretPosition","length","className","onEmojiClick"],"mappings":"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","sourcesContent":["//表情栏\r\nimport React, { Component } from 'react';\r\nimport ChatClient from '../ChatClient';\r\nimport '../css/emjoi.css';\r\nimport EmojiReact from 'react-emoji-react';\r\nconst emojis = [\r\n  {\r\n    name: 'rage'\r\n  },\r\n  {\r\n    name: 'blush'\r\n  },\r\n  {\r\n    name: 100\r\n  },\r\n  {\r\n    name: 'grinning'\r\n  }\r\n];\r\nclass Emjoi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emojis,\r\n      emjoi: [\r\n        '../emoji/1.png','../emoji/2.png','../emoji/3.png',\r\n        '../emoji/4.png','../emoji/5.png','../emoji/6.png',\r\n        '../emoji/7.png','../emoji/8.png','../emoji/9.png',\r\n        '../emoji/10.png','../emoji/11.png','../emoji/12.png',\r\n        '../emoji/13.png','../emoji/14.png','../emoji/15.png',\r\n        '../emoji/16.png','../emoji/17.png','../emoji/18.png',\r\n        '../emoji/19.png','../emoji/20.png','../emoji/21.png',\r\n        '../emoji/22.png','../emoji/23.png','../emoji/24.png',\r\n        '../emoji/25.png','../emoji/26.png','../emoji/27.png',\r\n        '../emoji/28.png','../emoji/29.png','../emoji/30.png',\r\n        '../emoji/31.png','../emoji/32.png','../emoji/33.png',\r\n        '../emoji/34.png','../emoji/35.png','../emoji/36.png',\r\n        '../emoji/37.png','../emoji/38.png','../emoji/39.png',\r\n        '../emoji/40.png'\r\n      ],\r\n      Code: [\r\n        '[e:~]','[e:!]','[e:@]','[e:#]','[e:$]',\r\n        '[e:%]','[e:^]','[e:&]','[e:*]','[e:(]',\r\n        '[e:)]','[e:Q]','[e:W]','[e:E]','[e:R]',\r\n        '[e:T]','[e:Y]','[e:U]','[e:I]','[e:O]',\r\n        '[e:P]','[e:A]','[e:S]','[e:D]','[e:F]',\r\n        '[e:G]','[e:H]','[e:J]','[e:K]','[e:L]',\r\n        '[e:Z]','[e:X]','[e:C]','[e:V]','[e:B]',\r\n        '[e:N]','[e:M]','[e:<]','[e:>]','[e:?]'\r\n      ]\r\n    }\r\n  }\r\n  onEmojiClick(name) {\r\n    const emojis = this.state.emojis.concat([{name}]);\r\n    this.setState({ emojis });\r\n  }\r\n  //在输入框内添加表情\r\n  setEmjoi(e) {\r\n    this.setState({ cls_icon: ['iconCard'] })\r\n    let input = document.getElementsByClassName('input')[0];\r\n    let str = input.innerText;\r\n    //获取光标位置\r\n    let pos = ChatClient.getCursortPosition(input);\r\n    //将输入框内容截成两段\r\n    let msg_1 = str.substring(0, pos);\r\n    let msg_2 = str.substring(pos);\r\n    //获取点击的表情的name属性\r\n    let faceName = e.target.name;\r\n    input.innerText = [msg_1, msg_2].join(faceName);\r\n    ChatClient.setCaretPosition(input, pos + faceName.length);\r\n  }\r\n  render() {\r\n    let { className } = this.props;\r\n    return (\r\n      <ul className={className}>\r\n        <EmojiReact \r\n        reactions={this.state.emojis}  \r\n        onEmojiClick={(name) => this.onEmojiClick(name)}\r\n      />\r\n          {/* <span className='point'></span>\r\n          {\r\n            this.state.Code.map((item, index) => {\r\n              return <li className='emjoi_1' key={index}>\r\n                <img src={this.state.emjoi[index]} className='img_1'\r\n                  onClick={(e) => this.setEmjoi(e)} name={item} alt='' />\r\n              </li>\r\n            })\r\n\r\n          } */}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\nexport default Emjoi;\r\n"]},"metadata":{},"sourceType":"module"}