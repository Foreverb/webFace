{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\webFace\\\\src\\\\Components\\\\emjoi.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//表情栏\nimport React, { Component } from 'react';\nimport ChatClient from '../ChatClient';\nimport '../css/emjoi.css';\n\nvar Emjoi = /*#__PURE__*/function (_Component) {\n  _inherits(Emjoi, _Component);\n\n  var _super = _createSuper(Emjoi);\n\n  function Emjoi(props) {\n    _classCallCheck(this, Emjoi);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Emjoi, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"iconfont icon-xianxingbaozhu red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }));\n    } // {\n    //   //输入框内填入表情\n    //   let input = document.getElementsByClassName('input')[0];\n    //   let str = input.innerText;\n    //   //获取光标位置\n    //   let pos = ChatClient.getCursortPosition(input);\n    //   //将输入框内容截成两段\n    //   let msg_1 = str.substring(0, pos);\n    //   let msg_2 = str.substring(pos);\n    //   //获取点击的表情的name属性\n    //   let faceName = name;\n    //   input.innerText = [msg_1, msg_2].join('') + faceName;\n    //   ChatClient.setCaretPosition(input, pos + faceName.length);\n    // this.props.closeEmjoi(false)\n    // }\n\n  }]);\n\n  return Emjoi;\n}(Component);\n\nexport default Emjoi;","map":{"version":3,"sources":["D:/webFace/src/Components/emjoi.js"],"names":["React","Component","ChatClient","Emjoi","props"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,kBAAP;;IACMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;WACD,kBAAS;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,K,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;EAzBkBH,S;;AA2BpB,eAAeE,KAAf","sourcesContent":["//表情栏\r\nimport React, { Component } from 'react';\r\nimport ChatClient from '../ChatClient';\r\nimport '../css/emjoi.css';\r\nclass Emjoi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <i className=\"iconfont icon-xianxingbaozhu red\"></i>\r\n      </div>\r\n    )\r\n  }\r\n  // {\r\n  //   //输入框内填入表情\r\n  //   let input = document.getElementsByClassName('input')[0];\r\n  //   let str = input.innerText;\r\n  //   //获取光标位置\r\n  //   let pos = ChatClient.getCursortPosition(input);\r\n  //   //将输入框内容截成两段\r\n  //   let msg_1 = str.substring(0, pos);\r\n  //   let msg_2 = str.substring(pos);\r\n  //   //获取点击的表情的name属性\r\n  //   let faceName = name;\r\n  //   input.innerText = [msg_1, msg_2].join('') + faceName;\r\n  //   ChatClient.setCaretPosition(input, pos + faceName.length);\r\n  // this.props.closeEmjoi(false)\r\n  // }\r\n}\r\nexport default Emjoi;\r\n"]},"metadata":{},"sourceType":"module"}