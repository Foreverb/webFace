{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\webFace\\\\src\\\\Components\\\\rightMsg.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//消息显示栏右侧消息模型\nimport React, { Component } from 'react';\nimport '../css/rightMsg.css';\nimport ChatClient from '../ChatClient';\n\nvar RightMsg = /*#__PURE__*/function (_Component) {\n  _inherits(RightMsg, _Component);\n\n  var _super = _createSuper(RightMsg);\n\n  function RightMsg(props) {\n    var _this;\n\n    _classCallCheck(this, RightMsg);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isImage: false,\n      content: ''\n    };\n    return _this;\n  } // //替换表情\n\n\n  _createClass(RightMsg, [{\n    key: \"fn\",\n    value: function fn(str) {\n      var _this2 = this;\n\n      var re = /\\[[\\u4e00-\\u9fa5]{2}\\]/g;\n      var rex = /http/g; // ...\n\n      if (re.test(str)) {\n        var word = str.split(re);\n        var src = str.match(re);\n        src = src.map(function (item) {\n          if (ChatClient.faceLibary[item]) {\n            return /*#__PURE__*/React.createElement(\"img\", {\n              src: ChatClient.faceLibary[item],\n              alt: \"\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 20\n              }\n            });\n          } else {\n            return item;\n          }\n        });\n        var all = new Array(src.length + word.length).fill(0);\n\n        for (var i = 0; i < all.length; i++) {\n          for (var n = 0; n < word.length; n++) {\n            all.splice(i, 1, word[n]);\n          }\n\n          if ((i + 2) % 2 === 1) {\n            for (var j = 0; j < src.length; j++) {\n              all.splice(i, 1, src[j]);\n            }\n          }\n        } // ...\n\n\n        return all;\n      } else {\n        if (rex.test(str)) {\n          this.setState({\n            isImage: true,\n            content: str\n          });\n        } else {\n          return str;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var src = this.props.src;\n      var _this$state = this.state,\n          isImage = _this$state.isImage,\n          content = _this$state.content;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"msgWrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: src,\n        className: \"rightImg\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, isImage ? /*#__PURE__*/React.createElement(\"img\", {\n        src: content && content,\n        className: \"sendImg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 30\n        }\n      }) : this.changeCon()));\n    }\n  }, {\n    key: \"changeCon\",\n    value: function changeCon() {\n      var content = this.props.content;\n      return this.fn(content);\n    }\n  }]);\n\n  return RightMsg;\n}(Component);\n\nexport default RightMsg;","map":{"version":3,"sources":["D:/webFace/src/Components/rightMsg.js"],"names":["React","Component","ChatClient","RightMsg","props","state","isImage","content","str","re","rex","test","word","split","src","match","map","item","faceLibary","all","Array","length","fill","i","n","splice","j","setState","changeCon","fn"],"mappings":"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","sourcesContent":["//消息显示栏右侧消息模型\r\nimport React, { Component } from 'react';\r\nimport '../css/rightMsg.css';\r\nimport ChatClient from '../ChatClient';\r\n\r\nclass RightMsg extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          isImage : false,\r\n          content : '',\r\n        }\r\n    }\r\n    // //替换表情\r\n    fn( str ){\r\n      let re = /\\[[\\u4e00-\\u9fa5]{2}\\]/g;\r\n      let rex = /http/g;\r\n      // ...\r\n      if( re.test(str) ){\r\n        let word = str.split(re);\r\n        let src = str.match(re);\r\n        src = src.map((item)=>{\r\n          if( ChatClient.faceLibary[item] ){\r\n            return <img src={ChatClient.faceLibary[item]} alt=''/>\r\n          }else{\r\n            return item\r\n          }\r\n        })\r\n        let all = new Array(src.length+word.length).fill(0);\r\n        for (var i = 0; i < all.length; i++) {\r\n          for( var n = 0; n < word.length; n++ ){\r\n              all.splice(i,1,word[n]);\r\n          }\r\n          if( (i+2)%2 === 1 ){\r\n            for(var j = 0; j < src.length; j++){\r\n              all.splice(i,1,src[j]);\r\n            }\r\n          }\r\n        }\r\n        // ...\r\n        return all;\r\n      }else{\r\n        if( rex.test(str) ){\r\n          this.setState({isImage:true,content:str});\r\n        }else{\r\n          return str\r\n        }\r\n      }\r\n    }\r\n    render(){\r\n        let {src } = this.props;\r\n        let {isImage,content} = this.state;\r\n        return(\r\n            <div className='msgWrap'>\r\n                <img src={src} className='rightImg' alt=''/>\r\n                <p className='msg'>\r\n                  {isImage ? <img src={content && content} className='sendImg'/> : this.changeCon()}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n    changeCon(){\r\n      let {content} = this.props;\r\n      return this.fn(content);\r\n    }\r\n}\r\nexport default RightMsg;\r\n"]},"metadata":{},"sourceType":"module"}