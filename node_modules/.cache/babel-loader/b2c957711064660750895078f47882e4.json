{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\webFace\\\\src\\\\Components\\\\emjoi.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//表情栏\nimport React, { Component } from 'react';\nimport ChatClient from '../ChatClient';\nimport '../css/emjoi.css';\n\nvar Emjoi = /*#__PURE__*/function (_Component) {\n  _inherits(Emjoi, _Component);\n\n  var _super = _createSuper(Emjoi);\n\n  function Emjoi(props) {\n    var _this;\n\n    _classCallCheck(this, Emjoi);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      emjoiList: ChatClient.emjoi\n    };\n    return _this;\n  } //在输入框内添加表情\n\n\n  _createClass(Emjoi, [{\n    key: \"setEmjoi\",\n    value: function setEmjoi(e) {\n      this.setState({\n        cls_icon: ['iconCard']\n      });\n      var input = document.getElementsByClassName('input')[0];\n      var str = input.innerText; //获取光标位置\n\n      var pos = ChatClient.getCursortPosition(input); //将输入框内容截成两段\n\n      var msg_1 = str.substring(0, pos);\n      var msg_2 = str.substring(pos); //获取点击的表情的name属性\n\n      var faceName = e.target.name;\n      input.innerText = [msg_1, msg_2].join(faceName);\n      ChatClient.setCaretPosition(input, pos + faceName.length);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var className = this.props.className;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"point\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }), this.emjoiList.map(function (item, index) {\n        /*#__PURE__*/\n        React.createElement(\"li\", {\n          className: \"emjoi_1\",\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: item,\n          className: \"img_1\",\n          onClick: function onClick(e) {\n            return _this2.setEmjoi(e);\n          },\n          name: \"[\\u6587\\u4EF6]\",\n          alt: \"\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return Emjoi;\n}(Component);\n\nexport default Emjoi;","map":{"version":3,"sources":["D:/webFace/src/Components/emjoi.js"],"names":["React","Component","ChatClient","Emjoi","props","state","emjoiList","emjoi","e","setState","cls_icon","input","document","getElementsByClassName","str","innerText","pos","getCursortPosition","msg_1","substring","msg_2","faceName","target","name","join","setCaretPosition","length","className","map","item","index","setEmjoi"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,kBAAP;;IACMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAEJ,UAAU,CAACK;AADX,KAAb;AAFgB;AAKjB,G,CACD;;;;;WACA,kBAASC,CAAT,EAAW;AACT,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAG,CAAC,UAAD;AAAZ,OAAd;AACA,UAAIC,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,CAAZ;AACA,UAAIC,GAAG,GAAGH,KAAK,CAACI,SAAhB,CAHS,CAIT;;AACA,UAAIC,GAAG,GAAGd,UAAU,CAACe,kBAAX,CAA8BN,KAA9B,CAAV,CALS,CAMT;;AACA,UAAIO,KAAK,GAAGJ,GAAG,CAACK,SAAJ,CAAc,CAAd,EAAgBH,GAAhB,CAAZ;AACA,UAAII,KAAK,GAAGN,GAAG,CAACK,SAAJ,CAAcH,GAAd,CAAZ,CARS,CAST;;AACA,UAAIK,QAAQ,GAAGb,CAAC,CAACc,MAAF,CAASC,IAAxB;AACAZ,MAAAA,KAAK,CAACI,SAAN,GAAkB,CAACG,KAAD,EAAOE,KAAP,EAAcI,IAAd,CAAmBH,QAAnB,CAAlB;AACAnB,MAAAA,UAAU,CAACuB,gBAAX,CAA4Bd,KAA5B,EAAkCK,GAAG,GAACK,QAAQ,CAACK,MAA/C;AACD;;;WACD,kBAAQ;AAAA;;AAAA,UACDC,SADC,GACY,KAAKvB,KADjB,CACDuB,SADC;AAEN,0BACE;AAAI,QAAA,SAAS,EAAEA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGM,KAAKrB,SAAL,CAAesB,GAAf,CAAmB,UAACC,IAAD,EAAMC,KAAN,EAAc;AAC/B;AAAA;AAAI,UAAA,SAAS,EAAC,SAAd;AAAwB,UAAA,GAAG,EAAEA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,GAAG,EAAED,IAAV;AAAgB,UAAA,SAAS,EAAC,OAA1B;AACA,UAAA,OAAO,EAAE,iBAACrB,CAAD;AAAA,mBAAK,MAAI,CAACuB,QAAL,CAAcvB,CAAd,CAAL;AAAA,WADT;AACgC,UAAA,IAAI,EAAC,gBADrC;AAC4C,UAAA,GAAG,EAAC,EADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAID,OALD,CAHN,CADF;AAcD;;;;EAtCiBP,S;;AAwCpB,eAAeE,KAAf","sourcesContent":["//表情栏\r\nimport React, { Component } from 'react';\r\nimport ChatClient from '../ChatClient';\r\nimport '../css/emjoi.css';\r\nclass Emjoi extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      emjoiList: ChatClient.emjoi\r\n    }\r\n  }\r\n  //在输入框内添加表情\r\n  setEmjoi(e){\r\n    this.setState({cls_icon : ['iconCard']})\r\n    let input = document.getElementsByClassName('input')[0];\r\n    let str = input.innerText;\r\n    //获取光标位置\r\n    let pos = ChatClient.getCursortPosition(input);\r\n    //将输入框内容截成两段\r\n    let msg_1 = str.substring(0,pos);\r\n    let msg_2 = str.substring(pos);\r\n    //获取点击的表情的name属性\r\n    let faceName = e.target.name;\r\n    input.innerText = [msg_1,msg_2].join(faceName);\r\n    ChatClient.setCaretPosition(input,pos+faceName.length);\r\n  }\r\n  render(){\r\n    let {className} = this.props;\r\n    return(\r\n      <ul className={className}>\r\n          <span className='point'></span>\r\n          {\r\n            this.emjoiList.map((item,index)=>{\r\n              <li className='emjoi_1' key={index}>\r\n                <img src={item} className='img_1'\r\n                onClick={(e)=>this.setEmjoi(e)} name='[文件]' alt=''/>\r\n              </li>\r\n            })  \r\n            \r\n          }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\nexport default Emjoi;\r\n"]},"metadata":{},"sourceType":"module"}