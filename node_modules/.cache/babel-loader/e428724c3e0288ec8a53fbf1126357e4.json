{"ast":null,"code":"import _classCallCheck from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\webFace\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nwindow.Mock = true; //调用函数，与服务端进行交互\n\nvar ChatClient = /*#__PURE__*/function () {\n  function ChatClient() {\n    _classCallCheck(this, ChatClient);\n\n    this.Code = ['[e:~]', '[e:!]', '[e:@]', '[e:#]', '[e:$]', '[e:%]', '[e:^]', '[e:&]', '[e:*]', '[e:(]', '[e:)]', '[e:Q]', '[e:W]', '[e:E]', '[e:R]', '[e:T]', '[e:Y]', '[e:U]', '[e:I]', '[e:O]', '[e:P]', '[e:A]', '[e:S]', '[e:D]', '[e:F]', '[e:G]', '[e:H]', '[e:J]', '[e:K]', '[e:L]', '[e:Z]', '[e:X]', '[e:C]', '[e:V]', '[e:B]', '[e:N]', '[e:M]', '[e:<]', '[e:>]', '[e:?]'];\n    this.faceLibary = {\n      '[文件]': './img/file.png'\n    };\n    this.servers = {\n      \"iceServers\": [{\n        \"url\": \"stun:stun.l.google.com:19302\"\n      }, {\n        'url': 'stun:stunserver.org'\n      }, {\n        'url': 'stun:stun.softjoy.com'\n      }, {\n        'url': 'stun:stun.voiparound.com'\n      }, {\n        'url': 'turn:127.0.0.1',\n        'credential': 'ling1234',\n        'username': 'ling'\n      }]\n    };\n    this.timer = null;\n    this.onlineUserList = [];\n    this.isOnline = false;\n    this.socket = null;\n    this.pc = new RTCPeerConnection(this.servers);\n    this.localStream = null;\n    this.mediaStreamTrack = null;\n    this.RemoteStream = null;\n    this.events = {};\n    this.EventLibrary = {\n      userInfo: [],\n      onlineUserList: [],\n      chatMessage: [],\n      updateProfile: [],\n      __PING: [],\n      videoRquest: [],\n      changeSdpMsg: [],\n      changeIceMsg: []\n    };\n  }\n\n  _createClass(ChatClient, [{\n    key: \"getCursortPosition\",\n    value: //获取当前光标位置\n    function getCursortPosition(element) {\n      var caretOffset = 0;\n      var doc = element.ownerDocument || element.document;\n      var win = doc.defaultView || doc.parentWindow;\n      var sel;\n\n      if (typeof win.getSelection != \"undefined\") {\n        //谷歌、火狐\n        sel = win.getSelection();\n\n        if (sel.rangeCount > 0) {\n          //选中的区域\n          var range = win.getSelection().getRangeAt(0);\n          var preCaretRange = range.cloneRange(); //克隆一个选中区域\n\n          preCaretRange.selectNodeContents(element); //设置选中区域的节点内容为当前节点\n\n          preCaretRange.setEnd(range.endContainer, range.endOffset); //重置选中区域的结束位置\n\n          caretOffset = preCaretRange.toString().length;\n        }\n      } else if (sel === doc.selection && sel.type !== \"Control\") {\n        //IE\n        var textRange = sel.createRange();\n        var preCaretTextRange = doc.body.createTextRange();\n        preCaretTextRange.moveToElementText(element);\n        preCaretTextRange.setEndPoint(\"EndToEnd\", textRange);\n        caretOffset = preCaretTextRange.text.length;\n      }\n\n      return caretOffset;\n    }\n  }, {\n    key: \"setCaretPosition\",\n    value: //设置光标位置\n    function setCaretPosition(element, pos) {\n      var range, selection;\n\n      if (document.createRange) //Firefox, Chrome, Opera, Safari, IE 9+\n        {\n          range = document.createRange(); //创建一个选中区域\n\n          range.selectNodeContents(element); //选中节点的内容\n\n          if (element.innerHTML.length > 0) {\n            try {\n              range.setStart(element.childNodes[0], pos); //设置光标起始为指定位置\n            } catch (error) {\n              console.log('....');\n            }\n          }\n\n          range.collapse(true); //设置选中区域为一个点\n\n          selection = window.getSelection(); //获取当前选中区域\n\n          selection.removeAllRanges(); //移出所有的选中范围\n\n          selection.addRange(range); //添加新建的范围\n        } else if (document.selection) //IE 8 and lower\n        {\n          range = document.body.createTextRange(); //Create a range (a range is a like the selection but invisible)\n\n          range.moveToElementText(element); //Select the entire contents of the element with the range\n\n          range.collapse(false); //collapse the range to the end point. false means collapse to end rather than the start\n\n          range.select(); //Select the range (make it the visible selection\n        }\n    }\n  }, {\n    key: \"initSocket\",\n    value:\n    /**\r\n    * 初始化websocket\r\n    * socket对象\r\n    * 连接socket服务器、设置 socket 对象\r\n    */\n    function initSocket(host) {\n      // return this.socket = new reconnectingWebSocket(host);\n      return this.socket = new WebSocket(host);\n    } //消息模型，需要发送给服务端的消息\n\n  }, {\n    key: \"msgModel\",\n    value: function msgModel(content, from, to, type) {\n      var msg = {\n        content: content,\n        from: from,\n        to: to,\n        type: type\n      };\n      return JSON.stringify(msg);\n    }\n    /**\r\n    * 是一个供我们视频聊天的通道，需要通过new RTCPeerConnection来实例化\r\n    */\n\n  }, {\n    key: \"on\",\n    value:\n    /**\r\n    * 设置一个消息事件侦听\r\n    */\n    function on(eventName, callback) {\n      this.events[eventName] = this.events[eventName] || [];\n      this.events[eventName].push(callback);\n    }\n    /**\r\n    * 触发通过on绑定的事件\r\n    */\n\n  }, {\n    key: \"emit\",\n    value: function emit(eventName, _) {\n      var events = this.events[eventName];\n      var args = Array.prototype.slice.call(arguments, 1);\n\n      if (!events) {\n        return;\n      }\n\n      for (var i = 0, m = events.length; i < m; i++) {\n        events[i].apply(null, args);\n      }\n    }\n    /**\r\n    * 更新昵称\r\n    * {newNick} 新的昵称(string)\r\n    */\n\n  }, {\n    key: \"updateNick\",\n    value: function updateNick(data) {\n      //模拟代码\n      var id = data.id;\n      var model = {\n        content: data,\n        from: id,\n        to: '',\n        type: 'updateProfile'\n      };\n      return new Promise(function (res) {\n        setTimeout(function () {\n          res(model);\n        }, 2000);\n      });\n    }\n    /**\r\n    * 更新头像\r\n    * {avaSrc} 新的图片路径，通过文件处理服务器返回\r\n    */\n\n  }, {\n    key: \"updateAvater\",\n    value: function updateAvater(data) {\n      //模拟代码\n      var id = data.id;\n      var model = {\n        content: data,\n        from: id,\n        to: '',\n        type: 'updateProfile'\n      };\n      return new Promise(function (res) {\n        setTimeout(function () {\n          res(model);\n        }, 2000);\n      });\n    }\n    /**\r\n    * 更新公共频道开关状态\r\n    * {status} 开关的状态(Boolean)\r\n    */\n\n  }, {\n    key: \"switchPublic\",\n    value: function switchPublic(data) {\n      //模拟代码\n      var id = data.id;\n      var model = {\n        content: data,\n        from: id,\n        to: '',\n        type: 'updateProfile'\n      };\n      return new Promise(function (res) {\n        setTimeout(function () {\n          res(model);\n        }, 2000);\n      });\n    } //接收消息\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(profile, chatModePid) {\n      var to = profile.id;\n      return new Promise(function (resolve, reject) {\n        var msg = JSON.stringify({\n          content: {\n            msg: 'hello你好[文件]',\n            id: chatModePid,\n            ava: './img/emjoi.png',\n            isOpenPublic: true\n          },\n          from: chatModePid,\n          to: to,\n          type: 'chatMessage'\n        });\n        resolve(msg);\n      });\n    } // ------------ 视频聊天区 ----------------\n    //存储本地视频流,并显示\n\n  }, {\n    key: \"goStream\",\n    value: function goStream(stream, callBack) {\n      console.log(\"Received local stream\", stream);\n      this.mediaStreamTrack = typeof stream.stop === 'function' ? stream : stream.getTracks()[1];\n      var localVideo = document.getElementsByClassName('localVideo')[0];\n      console.log(\"显示本地视频流\", localVideo, stream);\n      localVideo.srcObject = stream; //存储视频流\n\n      this.localStream = stream;\n      callBack && callBack();\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError() {\n      console.log('handleError');\n    }\n  }, {\n    key: \"start\",\n    value: //请求开启本地摄像头，并存储视频流\n    function start(callBack) {\n      var _this2 = this;\n\n      console.log(\"Requesting local stream\");\n      var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n      getUserMedia.call(navigator, {\n        // audio: true,\n        video: true\n      }, function (stream) {\n        _this2.goStream(stream, callBack);\n      }, function (error) {\n        console.log(\"getUserMedia error: \", error);\n      });\n    }\n  }, {\n    key: \"onAnswercandidate\",\n    value: //接收方设置icecandidate\n    function onAnswercandidate(id, chatModePid) {\n      var _this = this;\n\n      console.log('设置完成后，设置 onicecandidate');\n\n      this.pc.onicecandidate = function (event) {\n        var content = _this.msgModel(event.candidate, id, chatModePid, 'changeIceMsg');\n\n        _this.socket.send(content);\n      };\n    } //设置远程sdp信息\n\n  }, {\n    key: \"SetRemoteDescription\",\n    value: function SetRemoteDescription(data, callBack) {\n      console.log('设置远程 description');\n      this.pc.setRemoteDescription(data.content); //设置当接收到视频流时：回调\n\n      this.pc.onaddstream = function (event) {\n        //接收offer方的视频流，并显示出来\n        console.log(\"Received remote stream\");\n        var stream = event.stream; //显示对方视频流\n\n        console.log('显示发起方视频流', stream);\n        var remoteVideo = document.getElementsByClassName('remoteVideo')[0];\n        remoteVideo.srcObject = stream;\n      };\n\n      callBack();\n    }\n  }, {\n    key: \"changeSdpMsg\",\n    value: function changeSdpMsg(socket, from, to, sdp) {\n      var that = this;\n      console.log('发起方：设置自身  description ');\n      this.pc.setLocalDescription(sdp);\n      var data = JSON.stringify({\n        content: sdp,\n        from: from,\n        to: to,\n        type: 'changeSdpMsg'\n      }); // console.log(isFaceTime);\n\n      socket.send(data);\n\n      this.pc.onicecandidate = function (event) {\n        var content = that.msgModel(event.candidate, from, to, 'changeIceMsg');\n        that.socket.send(content);\n      };\n    } //设置cookie值\n\n  }, {\n    key: \"setCookieUid\",\n    value: function setCookieUid(name, value) {\n      var Days = 1;\n      var exp = new Date();\n      exp.setTime(exp.getTime() + Days * 24 * 60 * 60 * 1000);\n      document.cookie = name + \"=\" + escape(value) + \";expires=\" + exp.toGMTString();\n    } //获取cookie值\n\n  }, {\n    key: \"getCookie\",\n    value: function getCookie(name) {\n      var arr,\n          reg = new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\"); //正则匹配\n\n      if (arr === document.cookie.match(reg)) {\n        return unescape(arr[2]);\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return ChatClient;\n}();\n\nexport default new ChatClient();","map":{"version":3,"sources":["D:/webFace/src/ChatClient.js"],"names":["window","Mock","ChatClient","Code","faceLibary","servers","timer","onlineUserList","isOnline","socket","pc","RTCPeerConnection","localStream","mediaStreamTrack","RemoteStream","events","EventLibrary","userInfo","chatMessage","updateProfile","__PING","videoRquest","changeSdpMsg","changeIceMsg","element","caretOffset","doc","ownerDocument","document","win","defaultView","parentWindow","sel","getSelection","rangeCount","range","getRangeAt","preCaretRange","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","toString","length","selection","type","textRange","createRange","preCaretTextRange","body","createTextRange","moveToElementText","setEndPoint","text","pos","innerHTML","setStart","childNodes","error","console","log","collapse","removeAllRanges","addRange","select","host","WebSocket","content","from","to","msg","JSON","stringify","eventName","callback","push","_","args","Array","prototype","slice","call","arguments","i","m","apply","data","id","model","Promise","res","setTimeout","profile","chatModePid","resolve","reject","ava","isOpenPublic","stream","callBack","stop","getTracks","localVideo","getElementsByClassName","srcObject","getUserMedia","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","video","goStream","_this","onicecandidate","event","msgModel","candidate","send","setRemoteDescription","onaddstream","remoteVideo","sdp","that","setLocalDescription","name","value","Days","exp","Date","setTime","getTime","cookie","escape","toGMTString","arr","reg","RegExp","match","unescape"],"mappings":"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","sourcesContent":["window.Mock = true;\r\n//调用函数，与服务端进行交互\r\nclass ChatClient {\r\n  Code = [\r\n    '[e:~]','[e:!]','[e:@]','[e:#]','[e:$]',\r\n    '[e:%]','[e:^]','[e:&]','[e:*]','[e:(]',\r\n    '[e:)]','[e:Q]','[e:W]','[e:E]','[e:R]',\r\n    '[e:T]','[e:Y]','[e:U]','[e:I]','[e:O]',\r\n    '[e:P]','[e:A]','[e:S]','[e:D]','[e:F]',\r\n    '[e:G]','[e:H]','[e:J]','[e:K]','[e:L]',\r\n    '[e:Z]','[e:X]','[e:C]','[e:V]','[e:B]',\r\n    '[e:N]','[e:M]','[e:<]','[e:>]','[e:?]'\r\n  ];\r\n  faceLibary = {'[文件]':'./img/file.png'}\r\n\r\n  //获取当前光标位置\r\n   getCursortPosition(element) {\r\n      var caretOffset = 0;\r\n      var doc = element.ownerDocument || element.document;\r\n      var win = doc.defaultView || doc.parentWindow;\r\n      var sel;\r\n      if (typeof win.getSelection != \"undefined\") {//谷歌、火狐\r\n        sel = win.getSelection();\r\n        if (sel.rangeCount > 0) {//选中的区域\r\n          var range = win.getSelection().getRangeAt(0);\r\n          var preCaretRange = range.cloneRange();//克隆一个选中区域\r\n          preCaretRange.selectNodeContents(element);//设置选中区域的节点内容为当前节点\r\n          preCaretRange.setEnd(range.endContainer, range.endOffset);  //重置选中区域的结束位置\r\n          caretOffset = preCaretRange.toString().length;\r\n        }\r\n      } else if ((sel === doc.selection) && sel.type !== \"Control\") {//IE\r\n        var textRange = sel.createRange();\r\n        var preCaretTextRange = doc.body.createTextRange();\r\n        preCaretTextRange.moveToElementText(element);\r\n        preCaretTextRange.setEndPoint(\"EndToEnd\", textRange);\r\n        caretOffset = preCaretTextRange.text.length;\r\n      }\r\n      return caretOffset;\r\n    };\r\n\r\n    //设置光标位置\r\n    setCaretPosition(element, pos) {\r\n        var range, selection;\r\n        if (document.createRange)//Firefox, Chrome, Opera, Safari, IE 9+\r\n        {\r\n          range = document.createRange();//创建一个选中区域\r\n          range.selectNodeContents(element);//选中节点的内容\r\n          if(element.innerHTML.length > 0) {\r\n            try {\r\n              range.setStart(element.childNodes[0], pos); //设置光标起始为指定位置\r\n            } catch (error) {\r\n              console.log('....');\r\n            }\r\n          }\r\n          range.collapse(true);       //设置选中区域为一个点\r\n          selection = window.getSelection();//获取当前选中区域\r\n          selection.removeAllRanges();//移出所有的选中范围\r\n          selection.addRange(range);//添加新建的范围\r\n        }\r\n        else if (document.selection)//IE 8 and lower\r\n        {\r\n          range = document.body.createTextRange();//Create a range (a range is a like the selection but invisible)\r\n          range.moveToElementText(element);//Select the entire contents of the element with the range\r\n          range.collapse(false);//collapse the range to the end point. false means collapse to end rather than the start\r\n          range.select();//Select the range (make it the visible selection\r\n        }\r\n      };\r\n\r\n    servers = {\r\n      \"iceServers\": [\r\n          {\r\n              \"url\": \"stun:stun.l.google.com:19302\"\r\n          },{\r\n            'url': 'stun:stunserver.org'\r\n          },{\r\n            'url': 'stun:stun.softjoy.com'\r\n          },{\r\n            'url': 'stun:stun.voiparound.com'\r\n          },\r\n          {\r\n          'url':'turn:127.0.0.1',\r\n          'credential': 'ling1234',\r\n          'username': 'ling'\r\n          }\r\n        ]\r\n      };\r\n      timer = null;\r\n  //在线用户列表\r\n  onlineUserList = [];\r\n  /**\r\n  * 当前和服务端的连接是否正常\r\n  * 如果一段时间没有收到服务器的消息，或者 socket 对象主动抛出了 onclose，则此值会被重设\r\n  */\r\n  isOnline = false;\r\n  /**\r\n  * 通过new websocket()实例化出的对象\r\n  * 供客户端与服务端交互\r\n  */\r\n  socket = null;\r\n  /**\r\n  * 初始化websocket\r\n  * socket对象\r\n  * 连接socket服务器、设置 socket 对象\r\n  */\r\n  initSocket(host){\r\n    // return this.socket = new reconnectingWebSocket(host);\r\n    return this.socket = new WebSocket(host);\r\n  }\r\n  //消息模型，需要发送给服务端的消息\r\n  msgModel(content,from,to,type){\r\n    let msg = {\r\n        content ,\r\n        from    ,\r\n        to      ,\r\n        type\r\n    }\r\n    return JSON.stringify(msg);\r\n  }\r\n  /**\r\n  * 是一个供我们视频聊天的通道，需要通过new RTCPeerConnection来实例化\r\n  */\r\n  pc = new RTCPeerConnection(this.servers)\r\n  /**\r\n  * 存储本地视频流\r\n  */\r\n  localStream = null;\r\n  //关闭摄像头\r\n  mediaStreamTrack = null;\r\n  /**\r\n  * 存储对方视频\r\n  */\r\n  RemoteStream = null;\r\n\r\n  //本地视频流显示标签\r\n  // localRef = '';\r\n  //远程视频流显示标签\r\n  // remoteRef = '';\r\n\r\n  /**\r\n  * 存放自定义事件和自定义事件对应事件处理函数\r\n  */\r\n  events = {};\r\n  //事件列表库\r\n  EventLibrary = {\r\n    userInfo : [],\r\n    onlineUserList : [],\r\n    chatMessage : [],\r\n    updateProfile : [],\r\n    __PING : [],\r\n    videoRquest : [],\r\n    changeSdpMsg : [],\r\n    changeIceMsg : []\r\n  };\r\n  /**\r\n  * 设置一个消息事件侦听\r\n  */\r\n  on(eventName,callback){\r\n    this.events[eventName] = this.events[eventName] || [];\r\n    this.events[eventName].push(callback);\r\n  }\r\n\r\n  /**\r\n  * 触发通过on绑定的事件\r\n  */\r\n  emit(eventName, _){\r\n    let events = this.events[eventName];\r\n    let args = Array.prototype.slice.call(arguments, 1);\r\n    if( !events ){\r\n        return;\r\n    }\r\n    for(let i = 0,m = events.length;i < m;i++){\r\n        events[i].apply(null, args);\r\n    }\r\n  }\r\n  /**\r\n  * 更新昵称\r\n  * {newNick} 新的昵称(string)\r\n  */\r\n  updateNick(data){\r\n    //模拟代码\r\n    let id = data.id;\r\n    let model = {content:data,from:id,to:'',type:'updateProfile'};\r\n    return new Promise((res)=>{\r\n      setTimeout(function(){\r\n          res(model);\r\n      },2000)\r\n    });\r\n  }\r\n\r\n  /**\r\n  * 更新头像\r\n  * {avaSrc} 新的图片路径，通过文件处理服务器返回\r\n  */\r\n  updateAvater(data){\r\n    //模拟代码\r\n    let id = data.id;\r\n    let model = {content:data,from:id,to:'',type:'updateProfile'};\r\n    return new Promise((res)=>{\r\n      setTimeout(function(){\r\n          res(model);\r\n      },2000)\r\n    })\r\n  }\r\n\r\n  /**\r\n  * 更新公共频道开关状态\r\n  * {status} 开关的状态(Boolean)\r\n  */\r\n  switchPublic(data){\r\n    //模拟代码\r\n    let id = data.id;\r\n    let model = {content:data,from:id,to:'',type:'updateProfile'};\r\n    return new Promise((res)=>{\r\n      setTimeout(function(){\r\n          res(model);\r\n      },2000)\r\n    })\r\n  }\r\n  //接收消息\r\n  onMessage(profile,chatModePid){\r\n    let to = profile.id;\r\n    return new Promise((resolve,reject)=>{\r\n      let msg = JSON.stringify({\r\n        content:{\r\n          msg:'hello你好[文件]',\r\n          id:chatModePid,\r\n          ava:'./img/emjoi.png',\r\n          isOpenPublic:true,},\r\n          from:chatModePid,\r\n          to:to,\r\n          type:'chatMessage'\r\n        })\r\n      resolve(msg);\r\n    })\r\n  }\r\n\r\n// ------------ 视频聊天区 ----------------\r\n\r\n  //存储本地视频流,并显示\r\n  goStream (stream,callBack) {\r\n    console.log(\"Received local stream\",stream);\r\n\r\n    this.mediaStreamTrack = typeof stream.stop === 'function' ? stream : stream.getTracks()[1]\r\n    let localVideo = document.getElementsByClassName('localVideo')[0];\r\n    console.log(\"显示本地视频流\",localVideo,stream);\r\n    localVideo.srcObject = stream;\r\n    //存储视频流\r\n    this.localStream = stream;\r\n    callBack && callBack();\r\n  }\r\n  handleError(){console.log('handleError')};\r\n  //请求开启本地摄像头，并存储视频流\r\n  start(callBack) {\r\n    console.log(\"Requesting local stream\");\r\n    let getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\r\n    getUserMedia.call(navigator, {\r\n            // audio: true,\r\n            video: true\r\n        },(stream)=>{\r\n            this.goStream(stream,callBack);\r\n        },(error)=>{\r\n            console.log(\"getUserMedia error: \", error);\r\n        });\r\n  };\r\n  //接收方设置icecandidate\r\n  onAnswercandidate(id,chatModePid){\r\n    let _this = this;\r\n      console.log('设置完成后，设置 onicecandidate');\r\n\r\n      this.pc.onicecandidate = function(event){\r\n          let content = _this.msgModel(event.candidate,id,chatModePid,'changeIceMsg');\r\n          _this.socket.send(content);\r\n      }\r\n  }\r\n  //设置远程sdp信息\r\n  SetRemoteDescription(data,callBack){\r\n    console.log('设置远程 description')\r\n    this.pc.setRemoteDescription(data.content);\r\n    //设置当接收到视频流时：回调\r\n    this.pc.onaddstream = (event)=>{\r\n      //接收offer方的视频流，并显示出来\r\n\r\n      console.log(\"Received remote stream\");\r\n\r\n      let stream = event.stream;\r\n\r\n      //显示对方视频流\r\n      console.log('显示发起方视频流',stream)\r\n      let remoteVideo = document.getElementsByClassName('remoteVideo')[0];\r\n      remoteVideo.srcObject = stream;\r\n    };\r\n    callBack();\r\n  }\r\n  changeSdpMsg(socket,from,to,sdp){\r\n    let that = this;\r\n    console.log('发起方：设置自身  description ')\r\n    this.pc.setLocalDescription(sdp);\r\n\r\n    let data = JSON.stringify({content:sdp,from,to,type:'changeSdpMsg'});\r\n    // console.log(isFaceTime);\r\n    socket.send(data);\r\n\r\n    this.pc.onicecandidate = function(event){\r\n        let content = that.msgModel(event.candidate,from,to,'changeIceMsg');\r\n        that.socket.send(content);\r\n    }\r\n  }\r\n  //设置cookie值\r\n  setCookieUid(name,value){\r\n      var Days = 1;\r\n      var exp = new Date();\r\n      exp.setTime(exp.getTime() + Days*24*60*60*1000);\r\n      document.cookie = name + \"=\"+ escape (value) + \";expires=\" + exp.toGMTString();\r\n  }\r\n  //获取cookie值\r\n  getCookie(name){\r\n\r\n      var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\"); //正则匹配\r\n      if(arr===document.cookie.match(reg)){\r\n        return unescape(arr[2]);\r\n      }\r\n      else{\r\n       return null;\r\n      }\r\n  }\r\n\r\n}\r\nexport default new ChatClient();\r\n"]},"metadata":{},"sourceType":"module"}